{"version":3,"sources":["components/CardList/card/Card.component.jsx","components/CardList/CardList.component.jsx","components/CardList/SearchBox/SearchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","name","email","id","className","src","alt","CardList","monsters","map","SearchBox","placeholder","onValueChange","type","onChange","App","state","searchValue","FilteredMonsters","filter","toLowerCase","includes","setState","getMonsters","this","fetch","then","response","json","catch","error","console","log","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAkBeA,G,MAdF,SAACC,GAAS,IACZC,EAAWD,EAAXC,QACAC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACI,sBAAKC,UAAU,OAAf,UACI,qBACIC,IAAG,+BAA0BF,EAA1B,0BAAsDG,IAAI,YAEjE,6BAAKL,IACL,4BAAIC,SCGAK,G,MAZA,SAACR,GACb,OACI,qBAAKK,UAAU,YAAf,SAEQL,EAAMS,SAASC,KAAI,SAAAT,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCOxBO,G,YAZG,SAACX,GAAU,IAClBY,EAA+BZ,EAA/BY,YAAaC,EAAkBb,EAAlBa,cACpB,OACI,uBACIR,UAAU,SACVS,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCNDG,E,kDACnB,aAAe,IAAD,8BACZ,gBAkBFH,cAAc,WAAK,IAAD,EACgB,EAAKI,MAA9BR,EADS,EACTA,SAAUS,EADD,EACCA,YACjB,GAAGA,EAAa,CACd,IAAMC,EAAmBV,EAASW,QAAO,SAAAnB,GAAO,OAC9CA,EAAQC,KAAKmB,cAAcC,SAASJ,EAAYG,kBAElD,EAAKE,SAAS,CAACd,SAAUU,SAEzB,EAAKK,eAzBP,EAAKP,MAAQ,CACXR,SAAU,GACVS,YAAY,IAJF,E,gEASZO,KAAKD,gB,oCAGQ,IAAD,OACZE,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAlB,GAAQ,OAAI,EAAKc,SAAS,CAAEd,gBACjCqB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,CAAEF,e,+BAexB,IAAD,OACCtB,EAAagB,KAAKR,MAAlBR,SACR,OACE,sBAAKJ,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWO,YAAa,yBACtBC,cAAe,SAACqB,GAAD,OAAM,EAAKX,SAAS,CAACL,YAAagB,EAAEC,OAAOC,QAAO,WAC/D,EAAKvB,cAAc,EAAKI,MAAMC,mBAElC,cAAC,EAAD,CAAUT,SAAUA,W,GAzCK4B,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.217c6155.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.styles.css'\r\n\r\n\r\nconst Card = (props)=>{\r\n    const {monster} = props\r\n    const {name, email, id} = monster\r\n    return(\r\n        <div className='card'>\r\n            <img\r\n                src={`https://robohash.org/${id}?set=set2&size=180x180`} alt='monster'\r\n            />\r\n            <h4>{name}</h4>\r\n            <p>{email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from './card/Card.component'\r\nimport './CardList.styles.css'\r\n\r\nconst CardList =(props)=>{\r\n    return(\r\n        <div className='card-list'>\r\n            {\r\n                props.monsters.map(monster=>(\r\n                    <Card key={monster.id} monster={monster}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  CardList","import React from 'react'\r\nimport './SearchBox.styles.css'\r\n\r\n\r\nconst SearchBox = (props)=> {\r\n    const {placeholder, onValueChange } = props\r\n    return(\r\n        <input\r\n            className='search'\r\n            type='search'\r\n            placeholder={placeholder}\r\n            onChange={onValueChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React, { Component } from 'react'\nimport CardList from './components/CardList/CardList.component'\nimport './App.css';\nimport SearchBox from './components/CardList/SearchBox/SearchBox.component';\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      monsters: [],\n      searchValue:''\n    }\n  }\n\n  componentDidMount() {\n    this.getMonsters()\n  }\n\n  getMonsters() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(monsters => this.setState({ monsters }))\n      .catch(error => console.log({ error }))\n  }\n\n  onValueChange=()=>{\n    const {monsters, searchValue} = this.state\n    if(searchValue) {\n      const FilteredMonsters = monsters.filter(monster=>\n        monster.name.toLowerCase().includes(searchValue.toLowerCase())\n      )\n      this.setState({monsters: FilteredMonsters})\n    }else {\n      this.getMonsters()\n    }\n  }\n\n  render() {\n    const { monsters } = this.state\n    return (\n      <div className='App'>\n        <h1>Monster Rolodex</h1>\n        <SearchBox placeholder={'Search for a monster..'} \n          onValueChange={(e)=> this.setState({searchValue: e.target.value},()=>{\n            this.onValueChange(this.state.searchValue)\n          })}/>\n        <CardList monsters={monsters} />\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}